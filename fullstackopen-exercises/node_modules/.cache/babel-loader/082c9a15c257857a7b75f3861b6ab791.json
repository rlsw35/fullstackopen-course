{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlsw3\\\\Documents\\\\Project\\\\learning\\\\fullstackopen\\\\part1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst History = ({\n  allClicks\n}) => {\n  if (allClicks.length !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"button press History : \", allClicks.join(\" \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"this app is used to press buttons!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n};\n\n_c = History;\n\nconst App = () => {\n  _s();\n\n  const [clicks, setClicks] = useState({\n    left: 0,\n    right: 0\n  });\n  const [allClicks, setAllClicks] = useState([]); //declare array\n\n  const testClick = text => {\n    //Event handlers must always be a function or a reference to a function.\n    return () => {\n      console.log(text);\n    };\n  };\n\n  const testClick2 = () => console.log(\"haha\");\n\n  const handleLeftClick = value => {\n    // setAllClicks(allClicks.concat(\"L\"));\n    () => setClicks({ ...clicks,\n      //previous state remains the same!\n      left: clicks.left + value\n    });\n  };\n\n  const handleRightClick = () => {\n    setAllClicks(allClicks.concat(\"R\"));\n    setClicks({ ...clicks,\n      //previous state remains the same!\n      right: clicks.right + 1\n    });\n  };\n\n  console.log(allClicks); //   console.log(\"left : \", clicks.left);\n  //   console.log(\"right : \", clicks.right);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLeftClick(100),\n      children: \"left click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: clicks.left\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testClick2,\n      children: \"right click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      allClicks: allClicks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"tN2RRqtDh7FpX465v9CnJbIyu2M=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"History\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/rlsw3/Documents/Project/learning/fullstackopen/part1/src/App.js"],"names":["React","useState","History","allClicks","length","join","App","clicks","setClicks","left","right","setAllClicks","testClick","text","console","log","testClick2","handleLeftClick","value","handleRightClick","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACjC,MAAIA,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,wBAAO;AAAA,4CAA6BD,SAAS,CAACE,IAAV,CAAe,GAAf,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALD;;KAAMH,O;;AAON,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACnCQ,IAAAA,IAAI,EAAE,CAD6B;AAEnCC,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAApC;AAKA,QAAM,CAACP,SAAD,EAAYQ,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C,CANgB,CAMgC;;AAEhD,QAAMW,SAAS,GAAIC,IAAD,IAAU;AAC1B;AACA,WAAO,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAFD;AAGD,GALD;;AAOA,QAAMG,UAAU,GAAG,MAAMF,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAzB;;AAEA,QAAME,eAAe,GAAIC,KAAD,IAAW;AACjC;AACA,UACEV,SAAS,CAAC,EACR,GAAGD,MADK;AACG;AACXE,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAAP,GAAcS;AAFZ,KAAD,CADX;AAKD,GAPD;;AASA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,YAAY,CAACR,SAAS,CAACiB,MAAV,CAAiB,GAAjB,CAAD,CAAZ;AACAZ,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AACG;AACXG,MAAAA,KAAK,EAAEH,MAAM,CAACG,KAAP,GAAe;AAFd,KAAD,CAAT;AAID,GAND;;AAQAI,EAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ,EAlCgB,CAmChB;AACA;;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEc,eAAe,CAAC,GAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIV,MAAM,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEO,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEb;AAApB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CA7CD;;GAAMG,G;;MAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst History = ({ allClicks }) => {\r\n  if (allClicks.length !== 0) {\r\n    return <div>button press History : {allClicks.join(\" \")}</div>;\r\n  }\r\n  return <div>this app is used to press buttons!</div>;\r\n};\r\n\r\nconst App = () => {\r\n  const [clicks, setClicks] = useState({\r\n    left: 0,\r\n    right: 0,\r\n  });\r\n\r\n  const [allClicks, setAllClicks] = useState([]); //declare array\r\n\r\n  const testClick = (text) => {\r\n    //Event handlers must always be a function or a reference to a function.\r\n    return () => {\r\n      console.log(text);\r\n    };\r\n  };\r\n\r\n  const testClick2 = () => console.log(\"haha\");\r\n\r\n  const handleLeftClick = (value) => {\r\n    // setAllClicks(allClicks.concat(\"L\"));\r\n    () =>\r\n      setClicks({\r\n        ...clicks, //previous state remains the same!\r\n        left: clicks.left + value,\r\n      });\r\n  };\r\n\r\n  const handleRightClick = () => {\r\n    setAllClicks(allClicks.concat(\"R\"));\r\n    setClicks({\r\n      ...clicks, //previous state remains the same!\r\n      right: clicks.right + 1,\r\n    });\r\n  };\r\n\r\n  console.log(allClicks);\r\n  //   console.log(\"left : \", clicks.left);\r\n  //   console.log(\"right : \", clicks.right);\r\n  return (\r\n    <>\r\n      <button onClick={handleLeftClick(100)}>left click</button>\r\n      <p>{clicks.left}</p>\r\n      <button onClick={testClick2}>right click</button>\r\n      <History allClicks={allClicks} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
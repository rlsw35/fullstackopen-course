{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlsw3\\\\Documents\\\\Project\\\\learning\\\\fullstackopen\\\\fullstackopen-exercises\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const pObj = [{\n    name: \"ronald\",\n    age: 22\n  }];\n  const [persons, setPersons] = useState(pObj);\n  const [newContact, setNewContact] = useState(\"new contact\");\n  const [emptyCol, setEmptyCol] = useState(true);\n\n  const handleOnChange = event => {\n    setNewContact(event.target.value);\n    console.log(persons);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const personObj = {\n      name: newContact,\n      date: new Date().toISOString()\n    };\n\n    if (newContact !== \"\") {\n      console.log(\"index of\", persons.indexOf(newContact));\n\n      if (persons.indexOf(newContact) > -1) {\n        window.alert(newContact + \" is an existing contact\");\n      } else {\n        setEmptyCol(false);\n        setPersons(persons.concat(personObj));\n      }\n    } else {\n      setEmptyCol(true);\n      window.alert(\"Empty name added.\");\n    }\n\n    setNewContact(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), emptyCol ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Name Entered!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: persons.map(e => /*#__PURE__*/_jsxDEV(Phonebook, {\n        persons: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vKcDfaXHhLULo1wSABvSnxh9CXI=\");\n\n_c = App;\n\nconst Phonebook = ({\n  persons\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [persons.name, \" \", persons.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Phonebook;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Phonebook\");","map":{"version":3,"sources":["C:/Users/rlsw3/Documents/Project/learning/fullstackopen/fullstackopen-exercises/src/App.js"],"names":["React","useState","App","pObj","name","age","persons","setPersons","newContact","setNewContact","emptyCol","setEmptyCol","handleOnChange","event","target","value","console","log","handleSubmit","preventDefault","personObj","date","Date","toISOString","indexOf","window","alert","concat","map","e","Phonebook"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,IAAI,GAAG,CACX;AACEC,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,GAAG,EAAE;AAFP,GADW,CAAb;AAMA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACE,IAAD,CAAtC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,aAAD,CAA5C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;;AACA,QAAMW,cAAc,GAAIC,KAAD,IAAW;AAChCJ,IAAAA,aAAa,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACD,GAHD;;AAKA,QAAMY,YAAY,GAAIL,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,SAAS,GAAG;AAChBhB,MAAAA,IAAI,EAAEI,UADU;AAEhBa,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAFU,KAAlB;;AAKA,QAAIf,UAAU,KAAK,EAAnB,EAAuB;AACrBQ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,OAAO,CAACkB,OAAR,CAAgBhB,UAAhB,CAAxB;;AACA,UAAIF,OAAO,CAACkB,OAAR,CAAgBhB,UAAhB,IAA8B,CAAC,CAAnC,EAAsC;AACpCiB,QAAAA,MAAM,CAACC,KAAP,CAAalB,UAAU,GAAG,yBAA1B;AACD,OAFD,MAEO;AACLG,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,QAAAA,UAAU,CAACD,OAAO,CAACqB,MAAR,CAAeP,SAAf,CAAD,CAAV;AACD;AACF,KARD,MAQO;AACLT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAc,MAAAA,MAAM,CAACC,KAAP,CAAa,mBAAb;AACD;;AAEDjB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GArBD;;AAuBA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAES,YAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,QAAQ,EAAEN;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIGF,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA6B,qCAJxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,gBACGJ,OAAO,CAACsB,GAAR,CAAaC,CAAD,iBACX,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArDD;;GAAM3B,G;;KAAAA,G;;AAuDN,MAAM4B,SAAS,GAAG,CAAC;AAAExB,EAAAA;AAAF,CAAD,KAAiB;AACjC,sBACE;AAAA,2BACE;AAAA,iBACGA,OAAO,CAACF,IADX,OACkBE,OAAO,CAACe,IAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;MAAMS,S;AAUN,eAAe5B,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n  const pObj = [\r\n    {\r\n      name: \"ronald\",\r\n      age: 22,\r\n    },\r\n  ];\r\n  const [persons, setPersons] = useState(pObj);\r\n  const [newContact, setNewContact] = useState(\"new contact\");\r\n  const [emptyCol, setEmptyCol] = useState(true);\r\n  const handleOnChange = (event) => {\r\n    setNewContact(event.target.value);\r\n    console.log(persons);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const personObj = {\r\n      name: newContact,\r\n      date: new Date().toISOString(),\r\n    };\r\n\r\n    if (newContact !== \"\") {\r\n      console.log(\"index of\", persons.indexOf(newContact));\r\n      if (persons.indexOf(newContact) > -1) {\r\n        window.alert(newContact + \" is an existing contact\");\r\n      } else {\r\n        setEmptyCol(false);\r\n        setPersons(persons.concat(personObj));\r\n      }\r\n    } else {\r\n      setEmptyCol(true);\r\n      window.alert(\"Empty name added.\");\r\n    }\r\n\r\n    setNewContact(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Phonebook</h2>\r\n        <input onChange={handleOnChange}></input>\r\n        <button type=\"submit\">save now</button>\r\n        {emptyCol ? <p>No Name Entered!</p> : <></>}\r\n      </form>\r\n      <ul>\r\n        {persons.map((e) => (\r\n          <Phonebook persons={e} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Phonebook = ({ persons }) => {\r\n  return (\r\n    <div>\r\n      <li>\r\n        {persons.name} {persons.date}\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlsw3\\\\Documents\\\\Project\\\\learning\\\\fullstackopen\\\\fullstackopen-exercises\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const pObj = [{\n    name: \"ronald\",\n    age: 22\n  }];\n  const [persons, setPersons] = useState(pObj);\n  const [newContact, setNewContact] = useState(\"new contact\");\n  const [newNumber, setNewNumber] = useState(\"new number\");\n  const [emptyCol, setEmptyCol] = useState(true);\n  const [filteredPersons, setFilteredPersons] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/persons\").then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const handleNameOnChange = event => {\n    setNewContact(event.target.value);\n  };\n\n  const handleNumOnChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilter = event => {\n    setFilteredPersons(persons.filter(e => e.name === event.target.value));\n    console.log(\"Filtered Persons\", filteredPersons);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const personObj = {\n      name: newContact,\n      number: newNumber,\n      date: new Date().toISOString()\n    };\n\n    if (newContact !== \"\") {\n      if (persons.some(e => e.name.includes(newContact))) {\n        window.alert(newContact + \" is an existing contact\");\n      } else {\n        setEmptyCol(false);\n        setPersons(persons.concat(personObj));\n      }\n    } else {\n      setEmptyCol(true);\n      window.alert(\"Empty name added.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleNameOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this), \"Number :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleNumOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), \"Filter: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: persons.map(e => /*#__PURE__*/_jsxDEV(Phonebook, {\n        persons: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Filtered Phonebook \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredPersons.map(e => /*#__PURE__*/_jsxDEV(Phonebook, {\n        persons: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\nconst Phonebook = ({\n  persons\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [persons.name, \" \", persons.date, \" \", persons.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rlsw3/Documents/Project/learning/fullstackopen/fullstackopen-exercises/src/App.js"],"names":["React","useState","useEffect","axios","App","pObj","name","age","persons","setPersons","newContact","setNewContact","newNumber","setNewNumber","emptyCol","setEmptyCol","filteredPersons","setFilteredPersons","get","then","response","data","handleNameOnChange","event","target","value","handleNumOnChange","handleFilter","filter","e","console","log","handleSubmit","preventDefault","personObj","number","date","Date","toISOString","some","includes","window","alert","concat","map","Phonebook"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nconst App = () => {\r\n  const pObj = [\r\n    {\r\n      name: \"ronald\",\r\n      age: 22,\r\n    },\r\n  ];\r\n  const [persons, setPersons] = useState(pObj);\r\n  const [newContact, setNewContact] = useState(\"new contact\");\r\n  const [newNumber, setNewNumber] = useState(\"new number\");\r\n  const [emptyCol, setEmptyCol] = useState(true);\r\n  const [filteredPersons, setFilteredPersons] = useState([]);\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/persons\").then((response) => {\r\n      setPersons(response.data);\r\n    });\r\n  }, []);\r\n  const handleNameOnChange = (event) => {\r\n    setNewContact(event.target.value);\r\n  };\r\n  const handleNumOnChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n  const handleFilter = (event) => {\r\n    setFilteredPersons(persons.filter((e) => e.name === event.target.value));\r\n    console.log(\"Filtered Persons\", filteredPersons);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const personObj = {\r\n      name: newContact,\r\n      number: newNumber,\r\n      date: new Date().toISOString(),\r\n    };\r\n\r\n    if (newContact !== \"\") {\r\n      if (persons.some((e) => e.name.includes(newContact))) {\r\n        window.alert(newContact + \" is an existing contact\");\r\n      } else {\r\n        setEmptyCol(false);\r\n        setPersons(persons.concat(personObj));\r\n      }\r\n    } else {\r\n      setEmptyCol(true);\r\n      window.alert(\"Empty name added.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Phonebook</h2>\r\n        Name:<input onChange={handleNameOnChange}></input>\r\n        Number :<input onChange={handleNumOnChange}></input>\r\n        <button type=\"submit\">save now</button>\r\n      </form>\r\n      Filter: <input onChange={handleFilter} />\r\n      <h2>Phonebook</h2>\r\n      <ul>\r\n        {persons.map((e) => (\r\n          <Phonebook persons={e} />\r\n        ))}\r\n      </ul>\r\n      <h2>Filtered Phonebook </h2>\r\n      <ul>\r\n        {filteredPersons.map((e) => (\r\n          <Phonebook persons={e} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Phonebook = ({ persons }) => {\r\n  return (\r\n    <div>\r\n      <li>\r\n        {persons.name} {persons.date} {persons.number}\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlsw3\\\\Documents\\\\Project\\\\learning\\\\fullstackopen\\\\unicafe\\\\src\\\\Feedback.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feedback = () => {\n  _s();\n\n  const feedback = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n  const [userData, setUserData] = useState(feedback);\n  console.log(userData);\n\n  const handleGoodEvent = () => {\n    setUserData({ ...userData,\n      good: userData[\"good\"] + 1\n    });\n  };\n\n  const handleNeutralEvent = () => {\n    setUserData({ ...userData,\n      neutral: userData[\"neutral\"] + 1\n    });\n  };\n\n  const handleBadEvent = () => {\n    setUserData({ ...userData,\n      bad: userData[\"bad\"] + 1\n    });\n  };\n\n  const calcAverage = () => {\n    return (userData.good + userData.bad + userData.neutral) / 3;\n  };\n\n  const calcPositive = () => {\n    return userData.good / (userData.good + userData.bad + userData.neutral) * 100;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonComponent, {\n      handleGoodEvent: () => handleGoodEvent(),\n      handleBadEvent: () => handleBadEvent(),\n      handleNeutralEvent: () => handleNeutralEvent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      userData: userData,\n      average: calcAverage(),\n      positive: calcPositive()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feedback, \"AF/MTe5eNrzHbt7Bvzv5DXGxbIE=\");\n\n_c = Feedback;\n\nconst Statistics = props => {\n  const {\n    good,\n    neutral,\n    bad\n  } = props.userData;\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Good\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"bad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"neutral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good + neutral + bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: props.average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Positive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: props.positive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst ButtonComponent = props => {\n  console.log(props); //const { goodEvent, badEvent, neutralEvent } = props; cannot destructure functions\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleGoodEvent,\n      children: \"Good \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleBadEvent,\n      children: \"Bad \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleNeutralEvent,\n      children: \"Neutral \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = ButtonComponent;\nexport default Feedback;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Feedback\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"ButtonComponent\");","map":{"version":3,"sources":["C:/Users/rlsw3/Documents/Project/learning/fullstackopen/unicafe/src/Feedback.js"],"names":["React","useState","Feedback","feedback","good","neutral","bad","userData","setUserData","console","log","handleGoodEvent","handleNeutralEvent","handleBadEvent","calcAverage","calcPositive","Statistics","props","average","positive","ButtonComponent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nconst Feedback = () => {\r\n  const feedback = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  const [userData, setUserData] = useState(feedback);\r\n  console.log(userData);\r\n\r\n  const handleGoodEvent = () => {\r\n    setUserData({\r\n      ...userData,\r\n      good: userData[\"good\"] + 1,\r\n    });\r\n  };\r\n\r\n  const handleNeutralEvent = () => {\r\n    setUserData({\r\n      ...userData,\r\n      neutral: userData[\"neutral\"] + 1,\r\n    });\r\n  };\r\n\r\n  const handleBadEvent = () => {\r\n    setUserData({\r\n      ...userData,\r\n      bad: userData[\"bad\"] + 1,\r\n    });\r\n  };\r\n\r\n  const calcAverage = () => {\r\n    return (userData.good + userData.bad + userData.neutral) / 3;\r\n  };\r\n\r\n  const calcPositive = () => {\r\n    return (\r\n      (userData.good / (userData.good + userData.bad + userData.neutral)) * 100\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ButtonComponent\r\n        handleGoodEvent={() => handleGoodEvent()}\r\n        handleBadEvent={() => handleBadEvent()}\r\n        handleNeutralEvent={() => handleNeutralEvent()}\r\n      />\r\n      <Statistics\r\n        userData={userData}\r\n        average={calcAverage()}\r\n        positive={calcPositive()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Statistics = (props) => {\r\n  const { good, neutral, bad } = props.userData;\r\n  console.log(props);\r\n  return (\r\n    <div>\r\n      <h1>Statistics</h1>\r\n\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>Good</td>\r\n            <td>{good}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>bad</td>\r\n            <td>{bad}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>neutral</td>\r\n            <td>{neutral}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>All</td>\r\n            <td>{good + neutral + bad}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Average</td>\r\n            <td>{props.average}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Positive</td>\r\n            <td>{props.positive}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ButtonComponent = (props) => {\r\n  console.log(props);\r\n  //const { goodEvent, badEvent, neutralEvent } = props; cannot destructure functions\r\n  return (\r\n    <div>\r\n      <h1>Give Feedback</h1>\r\n      <button onClick={props.handleGoodEvent}>Good </button>\r\n      <button onClick={props.handleBadEvent}>Bad </button>\r\n      <button onClick={props.handleNeutralEvent}>Neutral </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n"]},"metadata":{},"sourceType":"module"}